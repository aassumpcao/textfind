@article{WilliamstxttoolUtilitiestext2014,
  title = {Txttool:  {{Utilities}} for Text Analysis in {{Stata}}},
  volume = {14},
  abstract = {This article describes txttool, a command that provides a set of tools for managing free-form text. The command integrates several built-in Stata functions with new text capabilities. These latter functions include a utility to create a bag-of-words representation of text and an implementation of Porter's (1980, Program: Electronic library and information systems 14: 130-137) word-stemming algorithm. Collectively, these utilities provide a text-processing suite for text mining and other text-based applications in Stata.},
  number = {4},
  journal = {Stata Journal},
  author = {Williams, U. and Williams, S. P.},
  year = {2014},
  keywords = {bag of words,cleaning,Porter stemmer,stop words,subwords,text mining,txttool},
  pages = {817-829}
}

@article{SchonlauTextminingngram2017,
  title = {Text Mining with N-Gram Variables},
  volume = {17},
  abstract = {Text mining is the process of turning free text into numerical variables and then analyzing them with statistical techniques. We introduce the command ngram, which implements the most common approach to text mining, the "bag of words". An n-gram is a contiguous sequence of words in a text. Broadly speaking, ngram creates hundreds or thousands of variables, each recording how often the corresponding n-gram occurs in a given text. This is more useful than it sounds.  We illustrate ngram with the categorization of text answers from two open-ended questions.},
  number = {4},
  journal = {Stata Journal},
  author = {Schonlau, M. and Guenther, N. and Sucholutsky, I.},
  year = {2017},
  keywords = {bag of words,gram,machine learning,ngram,sets of words,statistical learning,unigram},
  pages = {866-881}
}

@article{CoxStatatip982011,
  title = {Stata Tip 98: {{Counting}} Substrings within Strings},
  volume = {11},
  abstract = {Abstract not available.},
  number = {2},
  journal = {Stata Journal},
  author = {Cox, N. J.},
  year = {2011},
  pages = {318-320}
}

@article{BelottiTranslationnarrativetext2010,
  title = {Translation from Narrative Text to Standard Codes Variables with {{Stata}}},
  volume = {10},
  abstract = {In this article, we describe screening, a new Stata command for data management that can be used to examine the content of complex narrative-text variables to identify one or more user-defined keywords. The command is useful when dealing with string data contaminated with abbreviations, typos, or mistakes. A rich set of options allows a direct translation from the original narrative string to a user-defined standard coding scheme. Moreover, screening is flexible enough to facilitate the merging of information from different sources and to extract or reorganize the content of string variables.},
  number = {3},
  journal = {Stata Journal},
  author = {Belotti, F. and Depalo, D.},
  year = {2010},
  keywords = {keyword matching,narrative-text variables,screening,standard coding schemes},
  pages = {458-481}
}

@article{GrimmerTextDataPromise2013a,
  title = {Text as {{Data}}: {{The Promise}} and {{Pitfalls}} of {{Automatic Content Analysis Methods}} for {{Political Texts}}},
  volume = {21},
  issn = {1047-1987},
  doi = {10.1093/pan/mps028},
  abstract = {Politics and political conflict often occur in the written and spoken word. Scholars have long recognized this, but the massive costs of analyzing even moderately sized collections of texts have hindered their use in political science research. Here lies the promise of automated text analysis: it substantially reduces the costs of analyzing large collections of text. We provide a guide to this exciting new area of research and show how, in many instances, the methods have already obtained part of their promise. But there are pitfalls to using automated methods\textemdash{}they are no substitute for careful thought and close reading and require extensive and problem-specific validation. We survey a wide range of new methods, provide guidance on how to validate the output of the models, and clarify misconceptions and errors in the literature. To conclude, we argue that for automated text methods to become a standard tool for political scientists, methodologists must contribute new methods and new methods of validation.},
  number = {3},
  journal = {Political Analysis},
  author = {Grimmer, Justin and Stewart, Brandon M.},
  year = {2013},
  pages = {267-297}
}
